{"ast":null,"code":"var _jsxFileName = \"/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async prompt => {\n    try {\n      var _response$data;\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(response);\n      const botReply = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n      if (botReply) {\n        const formattedReply = /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: insertLineBreaks(botReply)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 32\n        }, this);\n        setMessages(prevMessages => [...prevMessages, {\n          text: formattedReply,\n          isBot: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n  const insertLineBreaks = (text, maxLineWidthFraction = 0.25) => {\n    // 获取页面宽度\n    const pageWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n    // 检查文本是否包含换行符\n    if (!text.includes('\\n')) {\n      // 计算允许的最大行宽\n      const maxLineWidth = pageWidth * maxLineWidthFraction;\n\n      // 按照最大行宽插入换行符\n      let currentLineWidth = 0;\n      let result = '';\n      for (let i = 0; i < text.length; i++) {\n        const char = text[i];\n\n        // 检查字符宽度，这里简化为每个字符宽度为10\n        const charWidth = 10;\n\n        // 如果当前行宽度超过允许的最大行宽，则插入换行符\n        if (currentLineWidth + charWidth > maxLineWidth) {\n          result += '\\n';\n          currentLineWidth = 0;\n        }\n        result += char;\n        currentLineWidth += charWidth;\n      }\n      return result;\n    }\n    return text; // 如果已经包含换行符，则直接返回原文本\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? \"user-message\" : \"ai-message\"}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_s(Chatbot, \"dG1zCosbiKTpKFA3lPEoDRAN5F8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","isLoading","setIsLoading","sendMessage","prompt","_response$data","response","post","headers","console","log","botReply","data","formattedReply","children","insertLineBreaks","fileName","_jsxFileName","lineNumber","columnNumber","prevMessages","text","isBot","error","handleSubmit","e","preventDefault","trim","userMessage","user","maxLineWidthFraction","pageWidth","window","innerWidth","document","documentElement","clientWidth","body","includes","maxLineWidth","currentLineWidth","result","i","length","char","charWidth","className","map","message","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\n\nconst Chatbot = () => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (prompt) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(response);\n      const botReply = response?.data?.data;\n      if (botReply) {\n        const formattedReply = <pre>{insertLineBreaks(botReply)}</pre>;\n        setMessages((prevMessages) => [...prevMessages, { text: formattedReply, isBot: true }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = { text: input, user: true };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n\n  const insertLineBreaks = (text, maxLineWidthFraction = 0.25) => {\n    // 获取页面宽度\n    const pageWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n    // 检查文本是否包含换行符\n    if (!text.includes('\\n')) {\n      // 计算允许的最大行宽\n      const maxLineWidth = pageWidth * maxLineWidthFraction;\n\n      // 按照最大行宽插入换行符\n      let currentLineWidth = 0;\n      let result = '';\n\n      for (let i = 0; i < text.length; i++) {\n        const char = text[i];\n\n        // 检查字符宽度，这里简化为每个字符宽度为10\n        const charWidth = 10;\n\n        // 如果当前行宽度超过允许的最大行宽，则插入换行符\n        if (currentLineWidth + charWidth > maxLineWidth) {\n          result += '\\n';\n          currentLineWidth = 0;\n        }\n\n        result += char;\n        currentLineWidth += charWidth;\n      }\n\n      return result;\n    }\n\n    return text; // 如果已经包含换行符，则直接返回原文本\n  };\n\n  return (\n      <div className=\"chatbot-container\">\n        <div className=\"chatbot-messages\">\n          {messages.map((message, index) => (\n              <div\n                  key={index}\n                  className={`message ${\n                      message.user ? \"user-message\" : \"ai-message\"\n                  }`}\n              >\n                {message.text}\n              </div>\n          ))}\n        </div>\n        <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n          {isLoading && <div className=\"loading-indicator\">Loading...</div>}\n        </form>\n      </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}