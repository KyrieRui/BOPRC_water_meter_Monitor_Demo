{"ast":null,"code":"var _jsxFileName = \"/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async prompt => {\n    try {\n      var _response$data;\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(response);\n      const botReply = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n      if (botReply) {\n        const formattedReply = addLineBreaks(botReply, window.innerWidth);\n        const formattedElement = /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: formattedReply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this);\n        setMessages(prevMessages => [...prevMessages, {\n          text: formattedElement,\n          isBot: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n  function addLineBreaks(text, windowWidth) {\n    const lines = text.split('\\n');\n    const threshold = windowWidth / 4; // 1/4页面宽度\n\n    const formattedLines = lines.map(line => {\n      if (!line.includes('\\n') && line.length > threshold) {\n        const regex = new RegExp(`.{1,${threshold}}`, 'g');\n        return line.match(regex).join('\\n');\n      }\n      return line;\n    });\n    return formattedLines.join('\\n');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? \"user-message\" : \"ai-message\"}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(Chatbot, \"dG1zCosbiKTpKFA3lPEoDRAN5F8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","isLoading","setIsLoading","sendMessage","prompt","_response$data","response","post","headers","console","log","botReply","data","formattedReply","addLineBreaks","window","innerWidth","formattedElement","children","fileName","_jsxFileName","lineNumber","columnNumber","prevMessages","text","isBot","error","handleSubmit","e","preventDefault","trim","userMessage","user","windowWidth","lines","split","threshold","formattedLines","map","line","includes","length","regex","RegExp","match","join","className","message","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\n\nconst Chatbot = () => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (prompt) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(response);\n      const botReply = response?.data?.data;\n      if (botReply) {\n        const formattedReply = addLineBreaks(botReply, window.innerWidth);\n        const formattedElement = <pre>{formattedReply}</pre>;\n        setMessages((prevMessages) => [...prevMessages, { text: formattedElement, isBot: true }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = { text: input, user: true };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n\n  function addLineBreaks(text, windowWidth) {\n    const lines = text.split('\\n');\n    const threshold = windowWidth / 4; // 1/4页面宽度\n\n    const formattedLines = lines.map((line) => {\n      if (!line.includes('\\n') && line.length > threshold) {\n        const regex = new RegExp(`.{1,${threshold}}`, 'g');\n        return line.match(regex).join('\\n');\n      }\n      return line;\n    });\n\n    return formattedLines.join('\\n');\n  }\n\n\n  return (\n      <div className=\"chatbot-container\">\n        <div className=\"chatbot-messages\">\n          {messages.map((message, index) => (\n              <div\n                  key={index}\n                  className={`message ${\n                      message.user ? \"user-message\" : \"ai-message\"\n                  }`}\n              >\n                {message.text}\n              </div>\n          ))}\n        </div>\n        <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n          {isLoading && <div className=\"loading-indicator\">Loading...</div>}\n        </form>\n      </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}