{"ast":null,"code":"var _jsxFileName = \"/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async prompt => {\n    try {\n      var _response$data, _response$data$data, _response$data$data$c, _response$data$data$c2;\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const botReply = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$c = _response$data$data.choices) === null || _response$data$data$c === void 0 ? void 0 : (_response$data$data$c2 = _response$data$data$c[0]) === null || _response$data$data$c2 === void 0 ? void 0 : _response$data$data$c2.text;\n      if (botReply) {\n        setMessages(prevMessages => [...prevMessages, {\n          text: botReply,\n          isBot: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? \"user-message\" : \"ai-message\"}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(Chatbot, \"dG1zCosbiKTpKFA3lPEoDRAN5F8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","isLoading","setIsLoading","sendMessage","prompt","_response$data","_response$data$data","_response$data$data$c","_response$data$data$c2","response","post","headers","botReply","data","choices","text","prevMessages","isBot","error","console","handleSubmit","e","preventDefault","trim","userMessage","user","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/zwang/Documents/GitHub/BOPRC_water_meter_Monitor_Demo/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Chatbot.css\";\n\nconst Chatbot = () => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (prompt) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post('http://localhost:8000/complete', {\n        prompt,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const botReply = response?.data?.data?.choices?.[0]?.text;\n      if (botReply) {\n        setMessages((prevMessages) => [...prevMessages, { text: botReply, isBot: true }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = { text: input, user: true };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    sendMessage(input);\n    setInput(\"\");\n  };\n\n  return (\n      <div className=\"chatbot-container\">\n        <div className=\"chatbot-messages\">\n          {messages.map((message, index) => (\n              <div\n                  key={index}\n                  className={`message ${\n                      message.user ? \"user-message\" : \"ai-message\"\n                  }`}\n              >\n                {message.text}\n              </div>\n          ))}\n        </div>\n        <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n          {isLoading && <div className=\"loading-indicator\">Loading...</div>}\n        </form>\n      </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}